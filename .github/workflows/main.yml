name: Build and push coffeeapp image and restart containers
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build app with Gradle
        run: |
          ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push CleonoraAdmin image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/cleonora-miahkykh:latest

#      - name: SSH Restart PostgreSQL container
#        uses: appleboy/ssh-action@v1.2.1
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          port: 22
#          script: |
#            docker network ls | grep -q "cleonora-network" || docker network create cleonora-network
#            echo "Restarting PostgreSQL container"
#
#            docker stop cleonora-db || echo "PostgreSQL container not running"
#            docker rm cleonora-db || echo "PostgreSQL container not found"
#            docker pull postgres:latest
#            docker run -d --name cleonora-db --net cleonora-network -e POSTGRES_PASSWORD=0000 -e POSTGRES_DB=postgres -p 5440:5432 postgres:latest
#            echo "PostgreSQL container has been updated"

      - name: SSH test
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            ls
            whoami

      - name: SSH create docker-compose.yml
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd /projects/CleonoraApp-R.Miahkykh
            sudo rm -f docker-compose.yml
            sudo echo "version: '3.8'" >> docker-compose.yml
            sudo echo "" >> docker-compose.yml
            sudo echo "services:" >> docker-compose.yml
            sudo echo "  cleonora-db:" >> docker-compose.yml
            sudo echo "    image: postgres:latest" >> docker-compose.yml
            sudo echo "    environment:" >> docker-compose.yml
            sudo echo "      POSTGRES_USER: postgres" >> docker-compose.yml
            sudo echo "      POSTGRES_PASSWORD: \"0000\"" >> docker-compose.yml
            sudo echo "      POSTGRES_DB: postgres" >> docker-compose.yml
            sudo echo "    ports:" >> docker-compose.yml
            sudo echo "      - \"5440:5432\"" >> docker-compose.yml
            sudo echo "    networks:" >> docker-compose.yml
            sudo echo "      - cleonora-network" >> docker-compose.yml
            sudo echo "    volumes:" >> docker-compose.yml
            sudo echo "      - postgres_data:/var/lib/postgresql/data" >> docker-compose.yml
            sudo echo "  cleonora-admin:" >> docker-compose.yml
            sudo echo "    image: glyuchnoglaz21/cleonora-miahkykh:latest" >> docker-compose.yml
            sudo echo "    ports:" >> docker-compose.yml
            sudo echo "      - \"7940:8080\"" >> docker-compose.yml
            sudo echo "    environment:" >> docker-compose.yml
            sudo echo "      - SENDGRID_API_KEY=${SENDGRID_API_KEY}" >> docker-compose.yml
            sudo echo "      - SPRING_DATASOURCE_URL=jdbc:postgresql://cleonora-db:5432/postgres" >> docker-compose.yml
            sudo echo "      - SPRING_DATASOURCE_USERNAME=postgres" >> docker-compose.yml
            sudo echo "      - SPRING_DATASOURCE_PASSWORD=0000" >> docker-compose.yml
            sudo echo "    networks:" >> docker-compose.yml
            sudo echo "      - cleonora-network" >> docker-compose.yml
            sudo echo "    depends_on:" >> docker-compose.yml
            sudo echo "      - cleonora-db" >> docker-compose.yml
            sudo echo "" >> docker-compose.yml
            sudo echo "networks:" >> docker-compose.yml
            sudo echo "  cleonora-network:" >> docker-compose.yml
            sudo echo "    driver: bridge" >> docker-compose.yml
            sudo echo "" >> docker-compose.yml
            sudo echo "volumes:" >> docker-compose.yml
            sudo echo "  postgres_data:" >> docker-compose.yml

      - name: SSH Restart CleonoraAdmin container
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            docker network ls | grep -q "cleonora-network" || docker network create cleonora-network
            cd /projects/CleonoraApp-R.Miahkykh
            docker compose pull
            docker-compose up -d
