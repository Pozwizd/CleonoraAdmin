name: Build and push coffeeapp image and restart containers
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build app with Gradle
        run: |
          ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push CleonoraAdmin image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/cleonora-miahkykh:latest

#      - name: SSH Restart PostgreSQL container
#        uses: appleboy/ssh-action@v1.2.1
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          port: 22
#          script: |
#            docker network ls | grep -q "cleonora-network" || docker network create cleonora-network
#            echo "Restarting PostgreSQL container"
#
#            docker stop cleonora-db || echo "PostgreSQL container not running"
#            docker rm cleonora-db || echo "PostgreSQL container not found"
#            docker pull postgres:latest
#            docker run -d --name cleonora-db --net cleonora-network -e POSTGRES_PASSWORD=0000 -e POSTGRES_DB=postgres -p 5440:5432 postgres:latest
#            echo "PostgreSQL container has been updated"

      - name: SSH Restart CleonoraAdmin container
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            docker network ls | grep -q "cleonora-network" || docker network create cleonora-network
            echo "Restarting CleonoraAdmin container"

            docker stop cleonora-admin || echo "CleonoraAdmin container not running"
            docker rm cleonora-admin || echo "CleonoraAdmin container not found"
            docker pull glyuchnoglaz21/cleonora-miahkykh:latest
            
            docker run -d --name cleonora-admin --network cleonora-network -e SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }} -e SPRING_DATASOURCE_URL=jdbc:postgresql://cleonora-db:5432/postgres -e SPRING_DATASOURCE_USERNAME=postgres -e SPRING_DATASOURCE_PASSWORD=0000 -p 7940:8081 ${{ secrets.DOCKER_USERNAME }}/cleonora-miahkykh:latest
            echo "CleonoraAdmin container has been updated"
